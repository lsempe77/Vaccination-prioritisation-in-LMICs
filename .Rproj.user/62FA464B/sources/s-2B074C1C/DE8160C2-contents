run_scenario_LS <- function(R0 = 3,
                            vaccine_coverage_mat = NA,
                            country = "India",
                            coverage = 0,
                            varying_coverage = 0,
                            mode = "Combined",
                            efficacy = 0.9,
                            vaccine_period = 30,
                            vaccine_start = 365 - 60,
                            immunosenescence = 1,
                            duration_R = Inf,
                            duration_V = 5000,
                            dur_vacc_delay = 7,
                            seeding_cases = 60,
                            t_start = 60,
                            reduce_inf = 1){
  # R0
  R0 <- R0
  # Population and mixing
  pop <- squire::get_population(country = country)$n
  # pop_standardise <- target_pop / sum(pop)
  # pop <- pop * pop_standardise
  mm <- squire::get_mixing_matrix(country = country)
  # Hospital capacity
  #hc <- get_capacity(country = country, pop = pop, hs_constraints = hs_constraints)
  # Poorer health outcomes for LMICs and LICs
  #pnsdt = get_prob_non_severe_death_treatment(income_group, hs_constraints)
  hc<-squire::get_healthcare_capacity(country = country)
  
  # Vaccine parameters
  # Efficacy
  efficacy <- set_efficacy(efficacy = efficacy, mode = mode, immunosenescence = immunosenescence)
  
  m1 <- strategy_matrix(vaccine_coverage_mat, max_coverage = coverage)
  max_vaccine = c(0, max(coverage) * sum(pop) / vaccine_period)
  tt_vaccine = c(0, vaccine_start)
  
  #
  init <- nimue:::init(squire::get_population("India")$n, seeding_cases = 20000)
  prop <- c(0,0,rep(0.3356796,7),rep(0.6354181,3),rep( 0.5989873,5))
  S_0[,4]<-round(S_0[,1] * prop)
  S_0[,1] <- S_0[,1] - S_0[,4]
  # and update the init
  init$S_0 <- S_0
  
  # Run
  r1 <- nimue::run(
    time_period = (365 * 3),
    country = "India",
   # R0 = R0, 
    #population = pop,
    #contact_matrix_set = mm,
    #hosp_bed_capacity = hc$hosp_beds,
    #ICU_bed_capacity = hc$ICU_beds,
    #prob_non_severe_death_treatment = pnsdt,
   # seeding_cases = seeding_cases,
    seed = 1,
    #dt = dt,
    #vaccine_coverage_mat = m1,
   # max_vaccine = max_vaccine,
  #  tt_vaccine = tt_vaccine,
   # dur_V = duration_V,
    #dur_vaccine_delay = dur_vacc_delay,
    #vaccine_efficacy_infection = efficacy$vaccine_efficacy_infection,
    #vaccine_efficacy_disease = efficacy$vaccine_efficacy_disease,
    #dur_R = duration_R,
    #init=init
  )
  
  # Create output: 1) wrt time, 2) summaries by age
  o1 <- nimue::format(r1) %>%
    mutate(t = t + t_start)
  
  x <- nimue::format(r1,
                     compartments = NULL,
                     summaries = c("deaths", "infections", "vaccines", "hospitalisations"),
                     reduce_age = FALSE) %>%
    mutate(t = t + t_start)
  
  value_all_t <- summarise_by_age(x, 1, max(x$t), "all_t")
  value_2021 <- summarise_by_age(x, 366, 731, 2021)
  value_2022 <- summarise_by_age(x, 731, 1096, 2022)
  
  o2 <- rbind(value_all_t,
              value_2021,
              value_2022)
  
  tibble(output = list(o1), output_age = list(o2))
}


# Parameters

# to define S0
vac.India.Age<-c(535710922, 	263777919, 	 167249798) #vac_18_45	vac_45_60	above_60
pop.India.Age<-c(sum(S_0[3:9]),sum(S_0[10:12]),sum(S_0[13:17]))

(vac.India.Age/pop.India.Age)/2


#

t_start <- 1
R0 <-  1.2
coverage <- seq(0.2, .9, .1)
mode <- c("Combined")
efficacy <- 0.9
duration_V <- 365
vaccine_coverage_mat <- c("All", "Elderly")
duration_R <- 365
dur_vacc_delay <- 7
vaccine_start <- 1
vaccine_period <- 186
immunosenescence <- 1


scenarios_LS <- expand_grid(
  t_start = t_start,
  country = countries,
  R0 = R0,
  coverage = coverage,
  mode = mode,
  efficacy = efficacy,
  duration_R = duration_R,
  duration_V = duration_V,
  vaccine_coverage_mat = vaccine_coverage_mat,
  vaccine_period = vaccine_period,
  dur_vacc_delay = dur_vacc_delay,
  vaccine_start = vaccine_start,
  immunosenescence = immunosenescence,
  seeding_cases = seeding_cases)

nrow(scenarios_LS)

#

plan(multisession, workers = availableCores())


out <- future_pmap(scenarios_LS, run_scenario_LS, .progress = TRUE)


#



# Format output
format_out_LS <- function(out, scenarios){
  # Combine_inputs and outputs
  
  out1 <- bind_cols(scenarios_LS, bind_rows(out))
  
  # Isolate counterfactual (Coverage == 0)
  if ("coverage" %in% colnames(out1)) {
    outcf <- filter(out1, coverage == 0.2) %>%
      select(-coverage) %>%
      rename(output_cf = output,
             output_age_cf = output_age) %>%
      unique()
  } 
  # Combine runs and counterfactual and estimate summaries
  summaries <- left_join(out1, outcf)
  
  m <- ncol(summaries)+1
  n <- ncol(summaries)+14
  
  table(summaries$)
  
  summarise_2021 <- summarise_outputs_age(summaries, p = 2021)
  #variable.names(summarise_2021)
  colnames(summarise_2021)[m:n] <- paste0(colnames(summarise_2021)[m:n], "_2021")
  
  summarise_2022 <- summarise_outputs_age(summaries, p = 2022)
  colnames(summarise_2022)[m:n] <- paste0(colnames(summarise_2022)[m:n], "_2022")
  
  summarise_all_t <- summarise_outputs_age(summaries, p = "all_t")
  colnames(summarise_all_t)[m:n] <- paste0(colnames(summarise_all_t)[m:n], "_all_t")
  
  glimpse(summarise_2021)
  
  summaries <- left_join(summaries, select(summarise_2021, -contains("output"))) %>%
    left_join(select(summarise_2022, -contains("output"))) %>%
    left_join(select(summarise_all_t, -contains("output")))
}



out_format <- format_out_LS(out, scenarios_LS)

glimpse(out_format)

out_format %>% 
  ggplot() + geom_point(aes(as.factor(coverage),deaths_averted_all_t,
                            colour=vaccine_coverage_mat)) +
  facet_wrap(~seeding_cases) + ggthemes::theme_clean() +
  scale_y_continuous(labels = scales::comma)









